{"ast":null,"code":"import _objectSpread from \"C:/Users/Hp/Downloads/lss/sss/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { capturePointer, isPrimaryPointer } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n  constructor(event, handlers) {\n    let {\n      transformPagePoint,\n      dragSnapToOrigin = false\n    } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    /**\n     * @internal\n     */\n    this.startEvent = null;\n    /**\n     * @internal\n     */\n    this.lastMoveEvent = null;\n    /**\n     * @internal\n     */\n    this.lastMoveEventInfo = null;\n    /**\n     * @internal\n     */\n    this.handlers = {};\n    this.updatePoint = () => {\n      if (!(this.lastMoveEvent && this.lastMoveEventInfo)) return;\n      const info = getPanInfo(this.lastMoveEventInfo, this.history);\n      const isPanStarted = this.startEvent !== null;\n      // Only start panning if the offset is larger than 3 pixels. If we make it\n      // any larger than this we'll want to reset the pointer history\n      // on the first update to avoid visual snapping to the cursoe.\n      const isDistancePastThreshold = distance2D(info.offset, {\n        x: 0,\n        y: 0\n      }) >= 3;\n      if (!isPanStarted && !isDistancePastThreshold) return;\n      const {\n        point\n      } = info;\n      const {\n        timestamp\n      } = frameData;\n      this.history.push(_objectSpread(_objectSpread({}, point), {}, {\n        timestamp\n      }));\n      const {\n        onStart,\n        onMove\n      } = this.handlers;\n      if (!isPanStarted) {\n        onStart && onStart(this.lastMoveEvent, info);\n        this.startEvent = this.lastMoveEvent;\n      }\n      onMove && onMove(this.lastMoveEvent, info);\n    };\n    this.handlePointerMove = (event, info) => {\n      if (event.target instanceof Element && event.target.hasPointerCapture && event.pointerId !== undefined) {\n        try {\n          if (!event.target.hasPointerCapture(event.pointerId)) {\n            return;\n          }\n        } catch (e) {}\n      }\n      this.lastMoveEvent = event;\n      this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n      // Throttle mouse move event to once per frame\n      frame.update(this.updatePoint, true);\n    };\n    this.handlePointerUp = (event, info) => {\n      capturePointer(event, \"release\");\n      this.end();\n      const {\n        onEnd,\n        onSessionEnd,\n        resumeAnimation\n      } = this.handlers;\n      if (this.dragSnapToOrigin) resumeAnimation && resumeAnimation();\n      if (!(this.lastMoveEvent && this.lastMoveEventInfo)) return;\n      const panInfo = getPanInfo(event.type === \"pointercancel\" || event.type === \"lostpointercapture\" ? this.lastMoveEventInfo : transformPoint(info, this.transformPagePoint), this.history);\n      if (this.startEvent && onEnd) {\n        onEnd(event, panInfo);\n      }\n      onSessionEnd && onSessionEnd(event, panInfo);\n    };\n    // If we have more than one touch, don't start detecting this gesture\n    if (!isPrimaryPointer(event)) return;\n    this.dragSnapToOrigin = dragSnapToOrigin;\n    this.handlers = handlers;\n    this.transformPagePoint = transformPagePoint;\n    const info = extractEventInfo(event);\n    const initialInfo = transformPoint(info, this.transformPagePoint);\n    const {\n      point\n    } = initialInfo;\n    const {\n      timestamp\n    } = frameData;\n    this.history = [_objectSpread(_objectSpread({}, point), {}, {\n      timestamp\n    })];\n    const {\n      onSessionStart\n    } = handlers;\n    onSessionStart && onSessionStart(event, getPanInfo(initialInfo, this.history));\n    capturePointer(event, \"set\");\n    this.removeListeners = pipe(addPointerEvent(event.currentTarget, \"pointermove\", this.handlePointerMove), addPointerEvent(event.currentTarget, \"pointerup\", this.handlePointerUp), addPointerEvent(event.currentTarget, \"pointercancel\", this.handlePointerUp), addPointerEvent(event.currentTarget, \"lostpointercapture\", this.handlePointerUp));\n  }\n  updateHandlers(handlers) {\n    this.handlers = handlers;\n  }\n  end() {\n    this.removeListeners && this.removeListeners();\n    cancelFrame(this.updatePoint);\n  }\n}\nfunction transformPoint(info, transformPagePoint) {\n  return transformPagePoint ? {\n    point: transformPagePoint(info.point)\n  } : info;\n}\nfunction subtractPoint(a, b) {\n  return {\n    x: a.x - b.x,\n    y: a.y - b.y\n  };\n}\nfunction getPanInfo(_ref, history) {\n  let {\n    point\n  } = _ref;\n  return {\n    point,\n    delta: subtractPoint(point, lastDevicePoint(history)),\n    offset: subtractPoint(point, startDevicePoint(history)),\n    velocity: getVelocity(history, 0.1)\n  };\n}\nfunction startDevicePoint(history) {\n  return history[0];\n}\nfunction lastDevicePoint(history) {\n  return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n  if (history.length < 2) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n  let i = history.length - 1;\n  let timestampedPoint = null;\n  const lastPoint = lastDevicePoint(history);\n  while (i >= 0) {\n    timestampedPoint = history[i];\n    if (lastPoint.timestamp - timestampedPoint.timestamp > secondsToMilliseconds(timeDelta)) {\n      break;\n    }\n    i--;\n  }\n  if (!timestampedPoint) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n  const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n  if (time === 0) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n  const currentVelocity = {\n    x: (lastPoint.x - timestampedPoint.x) / time,\n    y: (lastPoint.y - timestampedPoint.y) / time\n  };\n  if (currentVelocity.x === Infinity) {\n    currentVelocity.x = 0;\n  }\n  if (currentVelocity.y === Infinity) {\n    currentVelocity.y = 0;\n  }\n  return currentVelocity;\n}\nexport { PanSession };","map":{"version":3,"names":["capturePointer","isPrimaryPointer","secondsToMilliseconds","millisecondsToSeconds","addPointerEvent","extractEventInfo","distance2D","pipe","frame","cancelFrame","frameData","PanSession","constructor","event","handlers","transformPagePoint","dragSnapToOrigin","arguments","length","undefined","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","offset","x","y","point","timestamp","push","_objectSpread","onStart","onMove","handlePointerMove","target","Element","hasPointerCapture","pointerId","e","transformPoint","update","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","type","initialInfo","onSessionStart","removeListeners","currentTarget","updateHandlers","subtractPoint","a","b","_ref","delta","lastDevicePoint","startDevicePoint","velocity","getVelocity","timeDelta","i","timestampedPoint","lastPoint","time","currentVelocity","Infinity"],"sources":["C:/Users/Hp/Downloads/lss/sss/node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs"],"sourcesContent":["import { capturePointer, isPrimaryPointer } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            if (event.target instanceof Element &&\n                event.target.hasPointerCapture &&\n                event.pointerId !== undefined) {\n                try {\n                    if (!event.target.hasPointerCapture(event.pointerId)) {\n                        return;\n                    }\n                }\n                catch (e) { }\n            }\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            capturePointer(event, \"release\");\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\" ||\n                event.type === \"lostpointercapture\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        capturePointer(event, \"set\");\n        this.removeListeners = pipe(addPointerEvent(event.currentTarget, \"pointermove\", this.handlePointerMove), addPointerEvent(event.currentTarget, \"pointerup\", this.handlePointerUp), addPointerEvent(event.currentTarget, \"pointercancel\", this.handlePointerUp), addPointerEvent(event.currentTarget, \"lostpointercapture\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n"],"mappings":";AAAA,SAASA,cAAc,EAAEC,gBAAgB,QAAQ,YAAY;AAC7D,SAASC,qBAAqB,EAAEC,qBAAqB,QAAQ,cAAc;AAC3E,SAASC,eAAe,QAAQ,oCAAoC;AACpE,SAASC,gBAAgB,QAAQ,6BAA6B;AAC9D,SAASC,UAAU,QAAQ,0BAA0B;AACrD,SAASC,IAAI,QAAQ,sBAAsB;AAC3C,SAASC,KAAK,EAAEC,WAAW,EAAEC,SAAS,QAAQ,2BAA2B;;AAEzE;AACA;AACA;AACA,MAAMC,UAAU,CAAC;EACbC,WAAWA,CAACC,KAAK,EAAEC,QAAQ,EAAyD;IAAA,IAAvD;MAAEC,kBAAkB;MAAEC,gBAAgB,GAAG;IAAM,CAAC,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IAC9E;AACR;AACA;IACQ,IAAI,CAACG,UAAU,GAAG,IAAI;IACtB;AACR;AACA;IACQ,IAAI,CAACC,aAAa,GAAG,IAAI;IACzB;AACR;AACA;IACQ,IAAI,CAACC,iBAAiB,GAAG,IAAI;IAC7B;AACR;AACA;IACQ,IAAI,CAACR,QAAQ,GAAG,CAAC,CAAC;IAClB,IAAI,CAACS,WAAW,GAAG,MAAM;MACrB,IAAI,EAAE,IAAI,CAACF,aAAa,IAAI,IAAI,CAACC,iBAAiB,CAAC,EAC/C;MACJ,MAAME,IAAI,GAAGC,UAAU,CAAC,IAAI,CAACH,iBAAiB,EAAE,IAAI,CAACI,OAAO,CAAC;MAC7D,MAAMC,YAAY,GAAG,IAAI,CAACP,UAAU,KAAK,IAAI;MAC7C;MACA;MACA;MACA,MAAMQ,uBAAuB,GAAGtB,UAAU,CAACkB,IAAI,CAACK,MAAM,EAAE;QAAEC,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE;MAAE,CAAC,CAAC,IAAI,CAAC;MAC5E,IAAI,CAACJ,YAAY,IAAI,CAACC,uBAAuB,EACzC;MACJ,MAAM;QAAEI;MAAM,CAAC,GAAGR,IAAI;MACtB,MAAM;QAAES;MAAU,CAAC,GAAGvB,SAAS;MAC/B,IAAI,CAACgB,OAAO,CAACQ,IAAI,CAAAC,aAAA,CAAAA,aAAA,KAAMH,KAAK;QAAEC;MAAS,EAAE,CAAC;MAC1C,MAAM;QAAEG,OAAO;QAAEC;MAAO,CAAC,GAAG,IAAI,CAACvB,QAAQ;MACzC,IAAI,CAACa,YAAY,EAAE;QACfS,OAAO,IAAIA,OAAO,CAAC,IAAI,CAACf,aAAa,EAAEG,IAAI,CAAC;QAC5C,IAAI,CAACJ,UAAU,GAAG,IAAI,CAACC,aAAa;MACxC;MACAgB,MAAM,IAAIA,MAAM,CAAC,IAAI,CAAChB,aAAa,EAAEG,IAAI,CAAC;IAC9C,CAAC;IACD,IAAI,CAACc,iBAAiB,GAAG,CAACzB,KAAK,EAAEW,IAAI,KAAK;MACtC,IAAIX,KAAK,CAAC0B,MAAM,YAAYC,OAAO,IAC/B3B,KAAK,CAAC0B,MAAM,CAACE,iBAAiB,IAC9B5B,KAAK,CAAC6B,SAAS,KAAKvB,SAAS,EAAE;QAC/B,IAAI;UACA,IAAI,CAACN,KAAK,CAAC0B,MAAM,CAACE,iBAAiB,CAAC5B,KAAK,CAAC6B,SAAS,CAAC,EAAE;YAClD;UACJ;QACJ,CAAC,CACD,OAAOC,CAAC,EAAE,CAAE;MAChB;MACA,IAAI,CAACtB,aAAa,GAAGR,KAAK;MAC1B,IAAI,CAACS,iBAAiB,GAAGsB,cAAc,CAACpB,IAAI,EAAE,IAAI,CAACT,kBAAkB,CAAC;MACtE;MACAP,KAAK,CAACqC,MAAM,CAAC,IAAI,CAACtB,WAAW,EAAE,IAAI,CAAC;IACxC,CAAC;IACD,IAAI,CAACuB,eAAe,GAAG,CAACjC,KAAK,EAAEW,IAAI,KAAK;MACpCxB,cAAc,CAACa,KAAK,EAAE,SAAS,CAAC;MAChC,IAAI,CAACkC,GAAG,CAAC,CAAC;MACV,MAAM;QAAEC,KAAK;QAAEC,YAAY;QAAEC;MAAgB,CAAC,GAAG,IAAI,CAACpC,QAAQ;MAC9D,IAAI,IAAI,CAACE,gBAAgB,EACrBkC,eAAe,IAAIA,eAAe,CAAC,CAAC;MACxC,IAAI,EAAE,IAAI,CAAC7B,aAAa,IAAI,IAAI,CAACC,iBAAiB,CAAC,EAC/C;MACJ,MAAM6B,OAAO,GAAG1B,UAAU,CAACZ,KAAK,CAACuC,IAAI,KAAK,eAAe,IACrDvC,KAAK,CAACuC,IAAI,KAAK,oBAAoB,GACjC,IAAI,CAAC9B,iBAAiB,GACtBsB,cAAc,CAACpB,IAAI,EAAE,IAAI,CAACT,kBAAkB,CAAC,EAAE,IAAI,CAACW,OAAO,CAAC;MAClE,IAAI,IAAI,CAACN,UAAU,IAAI4B,KAAK,EAAE;QAC1BA,KAAK,CAACnC,KAAK,EAAEsC,OAAO,CAAC;MACzB;MACAF,YAAY,IAAIA,YAAY,CAACpC,KAAK,EAAEsC,OAAO,CAAC;IAChD,CAAC;IACD;IACA,IAAI,CAAClD,gBAAgB,CAACY,KAAK,CAAC,EACxB;IACJ,IAAI,CAACG,gBAAgB,GAAGA,gBAAgB;IACxC,IAAI,CAACF,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,kBAAkB,GAAGA,kBAAkB;IAC5C,MAAMS,IAAI,GAAGnB,gBAAgB,CAACQ,KAAK,CAAC;IACpC,MAAMwC,WAAW,GAAGT,cAAc,CAACpB,IAAI,EAAE,IAAI,CAACT,kBAAkB,CAAC;IACjE,MAAM;MAAEiB;IAAM,CAAC,GAAGqB,WAAW;IAC7B,MAAM;MAAEpB;IAAU,CAAC,GAAGvB,SAAS;IAC/B,IAAI,CAACgB,OAAO,GAAG,CAAAS,aAAA,CAAAA,aAAA,KAAMH,KAAK;MAAEC;IAAS,GAAG;IACxC,MAAM;MAAEqB;IAAe,CAAC,GAAGxC,QAAQ;IACnCwC,cAAc,IACVA,cAAc,CAACzC,KAAK,EAAEY,UAAU,CAAC4B,WAAW,EAAE,IAAI,CAAC3B,OAAO,CAAC,CAAC;IAChE1B,cAAc,CAACa,KAAK,EAAE,KAAK,CAAC;IAC5B,IAAI,CAAC0C,eAAe,GAAGhD,IAAI,CAACH,eAAe,CAACS,KAAK,CAAC2C,aAAa,EAAE,aAAa,EAAE,IAAI,CAAClB,iBAAiB,CAAC,EAAElC,eAAe,CAACS,KAAK,CAAC2C,aAAa,EAAE,WAAW,EAAE,IAAI,CAACV,eAAe,CAAC,EAAE1C,eAAe,CAACS,KAAK,CAAC2C,aAAa,EAAE,eAAe,EAAE,IAAI,CAACV,eAAe,CAAC,EAAE1C,eAAe,CAACS,KAAK,CAAC2C,aAAa,EAAE,oBAAoB,EAAE,IAAI,CAACV,eAAe,CAAC,CAAC;EACpV;EACAW,cAAcA,CAAC3C,QAAQ,EAAE;IACrB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;EAC5B;EACAiC,GAAGA,CAAA,EAAG;IACF,IAAI,CAACQ,eAAe,IAAI,IAAI,CAACA,eAAe,CAAC,CAAC;IAC9C9C,WAAW,CAAC,IAAI,CAACc,WAAW,CAAC;EACjC;AACJ;AACA,SAASqB,cAAcA,CAACpB,IAAI,EAAET,kBAAkB,EAAE;EAC9C,OAAOA,kBAAkB,GAAG;IAAEiB,KAAK,EAAEjB,kBAAkB,CAACS,IAAI,CAACQ,KAAK;EAAE,CAAC,GAAGR,IAAI;AAChF;AACA,SAASkC,aAAaA,CAACC,CAAC,EAAEC,CAAC,EAAE;EACzB,OAAO;IAAE9B,CAAC,EAAE6B,CAAC,CAAC7B,CAAC,GAAG8B,CAAC,CAAC9B,CAAC;IAAEC,CAAC,EAAE4B,CAAC,CAAC5B,CAAC,GAAG6B,CAAC,CAAC7B;EAAE,CAAC;AACzC;AACA,SAASN,UAAUA,CAAAoC,IAAA,EAAYnC,OAAO,EAAE;EAAA,IAApB;IAAEM;EAAM,CAAC,GAAA6B,IAAA;EACzB,OAAO;IACH7B,KAAK;IACL8B,KAAK,EAAEJ,aAAa,CAAC1B,KAAK,EAAE+B,eAAe,CAACrC,OAAO,CAAC,CAAC;IACrDG,MAAM,EAAE6B,aAAa,CAAC1B,KAAK,EAAEgC,gBAAgB,CAACtC,OAAO,CAAC,CAAC;IACvDuC,QAAQ,EAAEC,WAAW,CAACxC,OAAO,EAAE,GAAG;EACtC,CAAC;AACL;AACA,SAASsC,gBAAgBA,CAACtC,OAAO,EAAE;EAC/B,OAAOA,OAAO,CAAC,CAAC,CAAC;AACrB;AACA,SAASqC,eAAeA,CAACrC,OAAO,EAAE;EAC9B,OAAOA,OAAO,CAACA,OAAO,CAACR,MAAM,GAAG,CAAC,CAAC;AACtC;AACA,SAASgD,WAAWA,CAACxC,OAAO,EAAEyC,SAAS,EAAE;EACrC,IAAIzC,OAAO,CAACR,MAAM,GAAG,CAAC,EAAE;IACpB,OAAO;MAAEY,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC;EACzB;EACA,IAAIqC,CAAC,GAAG1C,OAAO,CAACR,MAAM,GAAG,CAAC;EAC1B,IAAImD,gBAAgB,GAAG,IAAI;EAC3B,MAAMC,SAAS,GAAGP,eAAe,CAACrC,OAAO,CAAC;EAC1C,OAAO0C,CAAC,IAAI,CAAC,EAAE;IACXC,gBAAgB,GAAG3C,OAAO,CAAC0C,CAAC,CAAC;IAC7B,IAAIE,SAAS,CAACrC,SAAS,GAAGoC,gBAAgB,CAACpC,SAAS,GAChD/B,qBAAqB,CAACiE,SAAS,CAAC,EAAE;MAClC;IACJ;IACAC,CAAC,EAAE;EACP;EACA,IAAI,CAACC,gBAAgB,EAAE;IACnB,OAAO;MAAEvC,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC;EACzB;EACA,MAAMwC,IAAI,GAAGpE,qBAAqB,CAACmE,SAAS,CAACrC,SAAS,GAAGoC,gBAAgB,CAACpC,SAAS,CAAC;EACpF,IAAIsC,IAAI,KAAK,CAAC,EAAE;IACZ,OAAO;MAAEzC,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC;EACzB;EACA,MAAMyC,eAAe,GAAG;IACpB1C,CAAC,EAAE,CAACwC,SAAS,CAACxC,CAAC,GAAGuC,gBAAgB,CAACvC,CAAC,IAAIyC,IAAI;IAC5CxC,CAAC,EAAE,CAACuC,SAAS,CAACvC,CAAC,GAAGsC,gBAAgB,CAACtC,CAAC,IAAIwC;EAC5C,CAAC;EACD,IAAIC,eAAe,CAAC1C,CAAC,KAAK2C,QAAQ,EAAE;IAChCD,eAAe,CAAC1C,CAAC,GAAG,CAAC;EACzB;EACA,IAAI0C,eAAe,CAACzC,CAAC,KAAK0C,QAAQ,EAAE;IAChCD,eAAe,CAACzC,CAAC,GAAG,CAAC;EACzB;EACA,OAAOyC,eAAe;AAC1B;AAEA,SAAS7D,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}